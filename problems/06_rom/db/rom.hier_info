|top
CLK => CLK.IN2
DS_EN1 <= hex_display:hd.anodes
DS_EN2 <= hex_display:hd.anodes
DS_EN3 <= hex_display:hd.anodes
DS_EN4 <= hex_display:hd.anodes
DS_A <= hex_display:hd.segments
DS_B <= hex_display:hd.segments
DS_C <= hex_display:hd.segments
DS_D <= hex_display:hd.segments
DS_E <= hex_display:hd.segments
DS_F <= hex_display:hd.segments
DS_G <= hex_display:hd.segments


|top|clk_div:clk_div
clk_in => cnt[0].CLK
clk_in => cnt[1].CLK
clk_in => cnt[2].CLK
clk_in => cnt[3].CLK
clk_in => cnt[4].CLK
clk_in => cnt[5].CLK
clk_in => cnt[6].CLK
clk_in => cnt[7].CLK
clk_in => cnt[8].CLK
clk_in => cnt[9].CLK
clk_in => cnt[10].CLK
clk_in => cnt[11].CLK
clk_out <= cnt[11].DB_MAX_OUTPUT_PORT_TYPE


|top|clk_div:clk_div2
clk_in => cnt[0].CLK
clk_in => cnt[1].CLK
clk_in => cnt[2].CLK
clk_in => cnt[3].CLK
clk_in => cnt[4].CLK
clk_in => cnt[5].CLK
clk_in => cnt[6].CLK
clk_in => cnt[7].CLK
clk_in => cnt[8].CLK
clk_in => cnt[9].CLK
clk_in => cnt[10].CLK
clk_in => cnt[11].CLK
clk_in => cnt[12].CLK
clk_in => cnt[13].CLK
clk_in => cnt[14].CLK
clk_in => cnt[15].CLK
clk_in => cnt[16].CLK
clk_in => cnt[17].CLK
clk_in => cnt[18].CLK
clk_in => cnt[19].CLK
clk_in => cnt[20].CLK
clk_in => cnt[21].CLK
clk_in => cnt[22].CLK
clk_in => cnt[23].CLK
clk_out <= cnt[23].DB_MAX_OUTPUT_PORT_TYPE


|top|hex_display:hd
clk => i[0].CLK
clk => i[1].CLK
data[0] => Mux0.IN14
data[1] => Mux1.IN14
data[2] => Mux2.IN14
data[3] => Mux3.IN14
data[4] => Mux0.IN10
data[5] => Mux1.IN10
data[6] => Mux2.IN10
data[7] => Mux3.IN10
data[8] => Mux0.IN6
data[9] => Mux1.IN6
data[10] => Mux2.IN6
data[11] => Mux3.IN6
data[12] => Mux0.IN2
data[13] => Mux1.IN2
data[14] => Mux2.IN2
data[15] => Mux3.IN2
anodes[0] <= ShiftLeft0.DB_MAX_OUTPUT_PORT_TYPE
anodes[1] <= ShiftLeft0.DB_MAX_OUTPUT_PORT_TYPE
anodes[2] <= ShiftLeft0.DB_MAX_OUTPUT_PORT_TYPE
anodes[3] <= ShiftLeft0.DB_MAX_OUTPUT_PORT_TYPE
segments[0] <= hex_to_seg:hex_to_seg.segments
segments[1] <= hex_to_seg:hex_to_seg.segments
segments[2] <= hex_to_seg:hex_to_seg.segments
segments[3] <= hex_to_seg:hex_to_seg.segments
segments[4] <= hex_to_seg:hex_to_seg.segments
segments[5] <= hex_to_seg:hex_to_seg.segments
segments[6] <= hex_to_seg:hex_to_seg.segments


|top|hex_display:hd|hex_to_seg:hex_to_seg
data[0] => Decoder0.IN3
data[1] => Decoder0.IN2
data[2] => Decoder0.IN1
data[3] => Decoder0.IN0
segments[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
segments[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
segments[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
segments[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
segments[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
segments[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
segments[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE


|top|rom_fetcher:rom_fetcher
clk => pc[0].CLK
clk => pc[1].CLK
clk => pc[2].CLK
clk => pc[3].CLK
clk => pc[4].CLK
clk => pc[5].CLK
clk => pc[6].CLK
clk => pc[7].CLK
q[0] <= rom_comb:rom_comb.q[0]
q[1] <= rom_comb:rom_comb.q[1]
q[2] <= rom_comb:rom_comb.q[2]
q[3] <= rom_comb:rom_comb.q[3]
q[4] <= rom_comb:rom_comb.q[4]
q[5] <= rom_comb:rom_comb.q[5]
q[6] <= rom_comb:rom_comb.q[6]
q[7] <= rom_comb:rom_comb.q[7]
q[8] <= rom_comb:rom_comb.q[8]
q[9] <= rom_comb:rom_comb.q[9]
q[10] <= rom_comb:rom_comb.q[10]
q[11] <= rom_comb:rom_comb.q[11]
q[12] <= rom_comb:rom_comb.q[12]
q[13] <= rom_comb:rom_comb.q[13]
q[14] <= rom_comb:rom_comb.q[14]
q[15] <= rom_comb:rom_comb.q[15]


|top|rom_fetcher:rom_fetcher|rom_comb:rom_comb
addr[0] => mem.RADDR
addr[1] => mem.RADDR1
addr[2] => mem.RADDR2
addr[3] => ~NO_FANOUT~
addr[4] => ~NO_FANOUT~
addr[5] => ~NO_FANOUT~
addr[6] => ~NO_FANOUT~
addr[7] => ~NO_FANOUT~
q[0] <= mem.DATAOUT
q[1] <= mem.DATAOUT1
q[2] <= mem.DATAOUT2
q[3] <= mem.DATAOUT3
q[4] <= mem.DATAOUT4
q[5] <= mem.DATAOUT5
q[6] <= mem.DATAOUT6
q[7] <= mem.DATAOUT7
q[8] <= mem.DATAOUT8
q[9] <= mem.DATAOUT9
q[10] <= mem.DATAOUT10
q[11] <= mem.DATAOUT11
q[12] <= mem.DATAOUT12
q[13] <= mem.DATAOUT13
q[14] <= mem.DATAOUT14
q[15] <= mem.DATAOUT15


